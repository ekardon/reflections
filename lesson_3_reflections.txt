When would you want to use a remote repository rather than keeping all your work local?

	When I work on a project with a team. Or, where I need some contributers. Opening
	respiratory to public (because of ridicilous GitHub shit) users would test it, and
	I can get feedback from them. Solving problems and so. When in private, it is to 
	share with my other devices, and a safe place to keep them.

Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

	There might be some changes in local version of the repository, so I guess, I would
	not want Git to screw it. Plus, there might not be always something to pull. It is
	good practive to do it manually.

Describe the differences between forks, clones, and branches. When would you use one 
instead of another?

	Fork, clone, and branch. Fork and clone is similar but branch is ridiculously diff
	from other two. I would use branch when I want to do some experiment with my code
	in my local machine. When I want to copy someone else's code and work on it, on my
	GitHub, I use fork. Finally, when I want to copy my codes from GitHub, or from some
	other device, I use clone.

What is the benefit of having a copy of the last known state of the remote stored locally?

 	You can compare two while offline. Make changes, and merge with local branches.
 	Making a working code with both changes.

How would you collaborate without using Git or GitHub? What would be easier, and what 
would be harder?

	Collaboration would a lot more harder. And every small changes would disappear now
	and then. We wouldn't be able to determine whose changes causing problems. Every time
	we try to save backups it would require so many space on hard drive. I don't see
	anything that would get easier.

When would you want to make changes in a separate branch rather than directly in master? 
What benefits does each approach have?

	When you work with a team, and want to someone to review the changes. And decide
	whether you really need that, or is it the best way to put it.If I make changes
	drirectly to the master branch then it will be up to date all the time, however 
	there might me some fatal error, which caused by a tiny typo. That is why putting
	a pull request and seperate branch makes more sense.